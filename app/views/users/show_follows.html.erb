<div class="container md:w-4/5 mx-auto min-h-screen" >
  <div class="flex flex-col justify-center items-center relative h-full">
    <div>
      <p class="font-bold text-sm md:text-base ml-2 mt-2"><%= @user.name %></p>
    </div>
    <div class="tabs2 border-b">
      <div class="tab" data-tab-target="#following">フォロー</div>
      <div class="tab" data-tab-target="#followers">フォロワー</div>
    </div>
    <div id="following" class="tab-content">
      <div class="mx-2 mt-5" style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem;">
        <% @following.each do |user| %>
          <div class="w-44 h-72 md:w-80 md:h-96 overflow-hidden bg-white rounded relative">
            <div class="py-1 md:py-3 ">
              <div class="mx-1 md:mx-4">
                <div class="avatar mt-1 ml-1 md:mt-4 md:ml-2">
                  <div class="w-10 md:w-20 rounded-full">
                    <%= image_tag(user.avatar.present? ? user.avatar.url : "default.png", alt: "アイコン") %>
                  </div>
                </div>
                <div class="mt-1 md:mt-3">
                  <%= render "users/user_index", user: user %>
                </div>
                <div class="mt-3 md:mb-4 text-sm md:text-base clamp-4">
                  <% user.skills.each do |skill| %>
                    <div class="badge badge-xs md:badge-sm bg-white md:badge-ghost ml-2 md:text-sm text-xs text-slate-500"><%= skill.name %></div>
                  <% end %>
                </div>
              </div>
              <div class="absolute bottom-2 left-2 right-2">
                <% unless user == current_user %>
                  <% if current_user != user %>
                    <%= render 'users/follow_buttons', { user: user, relationship: current_user.active_relationships.find_by(followed_id: user.id) } %>
                  <% end %>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
      <div class="my-6">
        <%= paginate @following %>
      </div>
    </div>
    <div id="followers" class="tab-content">
      <div class="mx-2 mt-5" style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem;">
        <% @followers.each do |user| %>
          <div class="w-44 h-72 md:w-80 md:h-96 overflow-hidden bg-white rounded relative">
            <div class="py-1 md:py-3 ">
              <div class="mx-1 md:mx-4">
                <div class="avatar mt-1 ml-1 md:mt-4 md:ml-2">
                  <div class="w-10 md:w-20 rounded-full">
                    <%= image_tag(user.avatar.present? ? user.avatar.url : "default.png", alt: "アイコン") %>
                  </div>
                </div>
                <div class="mt-1 md:mt-3">
                  <%= render "users/user_index", user: user %>
                </div>
                <div class="mt-3 md:mb-4 text-sm md:text-base clamp-4">
                  <% user.skills.each do |skill| %>
                    <div class="badge badge-xs md:badge-sm bg-white md:badge-ghost ml-2 md:text-sm text-xs text-slate-500"><%= skill.name %></div>
                  <% end %>
                </div>
              </div>
              <div class="absolute bottom-2 left-2 right-2">
                <% unless user == current_user %>
                  <% if current_user != user %>
                    <%= render 'users/follow_buttons', { user: user, relationship: current_user.active_relationships.find_by(followed_id: user.id) } %>
                  <% end %>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      </div>
      <div class="my-6">
        <%= paginate @followers %>
      </div>
    </div>
    <div class="w-80 mt-auto mb-12">
      <%= link_to '戻る', request.referer.present? ? request.referer : root_path, class:"inline-flex h-10 items-center justify-center gap-2 w-full rounded-full bg-white p-2 text-sm font-medium text-black mt-10" %>
    </div>
  </div>
</div>
<script>
document.addEventListener('turbo:load', () => {
  // URLからクエリパラメータを取得
  const urlParams = new URLSearchParams(window.location.search);
  const tabParam = urlParams.get('tab'); // 'followers' または 'following'

  // クエリパラメータに応じて対応するタブとタブコンテンツを選択
  let activeTab, activeContent;
  if (tabParam) {
    activeTab = document.querySelector(`.tab[data-tab-target="#${tabParam}"]`);
    activeContent = document.querySelector(`#${tabParam}`);
  }

  // クエリパラメータが指定されていない場合、または指定されたタブが見つからない場合のデフォルト
  if (!activeTab || !activeContent) {
    // ここでデフォルトのタブを選択する
    activeTab = document.querySelector('.tab');
    activeContent = document.querySelector('.tab-content');
  }

  // 選択されたタブとタブコンテンツをアクティブにする
  if (activeTab && activeContent) {
    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));

    activeTab.classList.add('active');
    activeContent.classList.add('active');
  }

  // タブのクリックイベントハンドラー
  document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', () => {
      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
      document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));

      const targetContent = document.querySelector(tab.getAttribute('data-tab-target'));
      tab.classList.add('active');
      if (targetContent) {
        targetContent.classList.add('active');
      }
    });
  });
});
</script>